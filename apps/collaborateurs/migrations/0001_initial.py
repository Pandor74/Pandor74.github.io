# Generated by Django 2.0.6 on 2018-10-16 09:55

import collaborateurs.models
import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adresse1', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Adresse N°1 ')),
                ('adresse2', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Adresse N°2 ')),
                ('code_postal', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Code Postal ')),
                ('ville', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Ville ')),
                ('pays', models.CharField(blank=True, default='France', max_length=255, null=True, verbose_name='Pays ')),
            ],
        ),
        migrations.CreateModel(
            name='Agence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name="Dénomination de l'agence : ")),
                ('categorie', models.CharField(choices=[('siege', 'Siege'), ('antenne', 'Antenne')], max_length=255)),
                ('telephone', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit contenir 10 chiffres', regex='^0?num?\\d{9}$')])),
                ('fax', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit contenir 10 chiffres', regex='^0?num?\\d{9}$')])),
                ('mail_contact', models.EmailField(max_length=254)),
                ('date_inscription', models.DateTimeField(default=datetime.date.today, verbose_name="Date d'inscription : ")),
                ('date_creation', models.DateTimeField(blank=True, null=True, verbose_name="Date de création de l'agence")),
            ],
        ),
        migrations.CreateModel(
            name='DocumentAgence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fichier', models.FileField(blank=True, null=True, storage=storage.OverwriteStorage(), upload_to=collaborateurs.models.fichier_agence_path, verbose_name="Document de l'agence : ")),
                ('categorie', models.CharField(blank=True, choices=[('DPGF', 'DPGF'), ('CCTP', 'CCTP'), ('PLAN', 'Plan'), ('DIAG', 'Diagnostic'), ('AUTRE', 'Autre')], default='AUTRE', max_length=255, null=True, verbose_name='Catégorie de document')),
                ('agence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collaborateurs.Agence')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fichier', models.FileField(blank=True, null=True, storage=storage.OverwriteStorage(), upload_to=collaborateurs.models.fichier_lot_path, verbose_name='Document du projet : ')),
                ('categorie', models.CharField(blank=True, choices=[('DPGF', 'DPGF'), ('CCTP', 'CCTP'), ('PLAN', 'Plan'), ('DIAG', 'Diagnostic'), ('AUTRE', 'Autre')], default='AUTRE', max_length=255, null=True, verbose_name='Catégorie de document')),
            ],
        ),
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, verbose_name="Nom de l'entreprise : ")),
                ('date_inscription', models.DateTimeField(default=datetime.date.today, verbose_name="Date d'inscription : ")),
                ('date_creation', models.DateTimeField(blank=True, null=True, verbose_name="Date de création de l'entreprise")),
            ],
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(default=0, verbose_name='Numéro du lot ')),
                ('suffixe', models.CharField(blank=True, choices=[('', 'Suffixe'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('bis', 'Bis'), ('ter', 'Ter')], default='', max_length=5, verbose_name='Suffixe')),
                ('description', models.TextField(blank=True, help_text='Décrivez de manière succincte les éléments constitutifs du travail à faire', null=True, verbose_name='Description succincte ')),
                ('short_name', models.CharField(help_text='Sera utilisé dans la barre de navigation', max_length=10, null=True, verbose_name='Nom court pour identifier le lot facilement')),
                ('nom', models.CharField(max_length=255, null=True, verbose_name='Nom du lot ')),
                ('publier', models.BooleanField(default=False)),
                ('activites', models.CharField(choices=[('Faca', 'Façades'), ('Elec', 'Electricité')], max_length=255, verbose_name="Types d'activités relative au lot")),
            ],
            options={
                'ordering': ['numero', 'suffixe'],
            },
        ),
        migrations.CreateModel(
            name='Projet',
            fields=[
                ('numero_teamber', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='Numéro Teamber (unique) ')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom du projet ')),
                ('agence', models.CharField(blank=True, choices=[('Annecy', 'Annecy'), ('Lyon', 'Lyon')], default='Annecy', max_length=20, null=True, verbose_name='Agence interne')),
                ('photo', models.ImageField(blank=True, null=True, storage=storage.OverwriteStorage(), upload_to=collaborateurs.models.image_path, verbose_name='Photo du projet (facultatif) ')),
                ('date_creation', models.DateField(default=datetime.date.today, verbose_name='Date de création ')),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-numero_teamber'],
            },
        ),
        migrations.CreateModel(
            name='Propriete',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_logements', models.IntegerField(blank=True, default=0, null=True, verbose_name='Nombre de logements ')),
                ('nb_etages', models.IntegerField(blank=True, default=0, null=True, verbose_name="Nombre d'étages ")),
                ('surf_sol', models.IntegerField(blank=True, default=0, null=True, verbose_name='Surface au sol (m²) ')),
                ('surf_shon', models.IntegerField(blank=True, default=0, null=True, verbose_name='Surface SHON (m²) ')),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date de rendu ')),
                ('architecture', models.CharField(blank=True, choices=[('basique', 'Basique'), ('moyenne', 'Moyenne'), ('complexe', 'Complexe')], max_length=255, null=True, verbose_name="Type d'architecture ")),
                ('secteur', models.CharField(blank=True, choices=[('copro', 'Copropriété'), ('tertiaire', 'Tertiaire'), ('social', 'Social'), ('individuel', 'Individuel')], max_length=255, null=True, verbose_name='Catégorie de clientèle ')),
                ('travaux', models.CharField(blank=True, choices=[('reno', 'Rénovation'), ('sinistre', 'Sinistre'), ('neuf', 'Neuf')], max_length=255, null=True, verbose_name='Type de travaux')),
                ('consultation', models.CharField(blank=True, choices=[('lot', 'Marché par lot'), ('global', 'Marché global')], max_length=255, null=True, verbose_name='Mode de consultation')),
                ('projet', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='collaborateurs.Projet')),
            ],
        ),
        migrations.AddField(
            model_name='lot',
            name='projet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collaborateurs.Projet'),
        ),
        migrations.AddField(
            model_name='documentlot',
            name='lot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collaborateurs.Lot'),
        ),
        migrations.AddField(
            model_name='agence',
            name='entreprise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collaborateurs.Entreprise'),
        ),
        migrations.AddField(
            model_name='agence',
            name='lots',
            field=models.ManyToManyField(related_name='repondants', to='collaborateurs.Lot'),
        ),
        migrations.AddField(
            model_name='adresse',
            name='agence',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='collaborateurs.Agence'),
        ),
        migrations.AddField(
            model_name='adresse',
            name='projet',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='collaborateurs.Projet'),
        ),
    ]
